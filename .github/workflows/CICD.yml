name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  snyk:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: snyk
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: |
          pip3 install requests
          python3 Tests.py

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker image tag
        id: docker_tag
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.event.ref }}" ]; then
            if [[ "${{ github.ref }}" == refs/tags/* ]]; then
              echo "::set-output name=tag::${{ github.ref_name }}"
            else
              echo "::set-output name=tag::latest"
            fi
          else
            echo "::set-output name=tag::latest"
          fi

      # Build Docker Image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nadobot:${{ steps.docker_tag.outputs.tag }} .
