name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  snyk:
    permissions:
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=./snyk.sarif

      - name: Upload result to GitHub Code Scanning
        if: hashFiles('./snyk.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./snyk.sarif

  # Checks the API status to ensure it is 200 OK
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: snyk
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: |
          pip3 install requests
          python3 tests.py

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker Image
      - name: Build Docker image
        run: docker build -t nadobot .

      - name: Push Docker image
        run: |
          docker tag nadobot ${{ secrets.DOCKER_USERNAME }}/nadobot
          docker push ${{ secrets.DOCKER_USERNAME }}/nadobot

  imagesecurity:
    name: Image Security Check
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Trivy Scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin v0.58.2
          docker pull zachdehooge/nadobot
          trivy image zachdehooge/nadobot:latest
